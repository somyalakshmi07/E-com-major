<%- include('partials/header') %>

<main class="shop-page">
    <section class="shop-header">
        <div class="container">
            <h1>Our Little Treasures</h1>
            <p>Find everything your child needs in one magical place!</p>
        </div>
    </section>

    <section class="shop-search">
        <div class="container">
            <form action="/shop" method="GET" class="search-form">
                <input type="text" name="search" placeholder="Search for products..." value="<%= searchQuery %>">
                <button type="submit">üîç</button>
                <% if (currentCategory !== 'all') { %>
                    <input type="hidden" name="category" value="<%= currentCategory %>">
                <% } %>
            </form>
        </div>
    </section>

    <section class="shop-controls">
        <div class="container">
            <div class="controls-grid">
                <div class="filter-control">
                    <label for="category">Filter by:</label>
                    <select id="category" onchange="filterProducts()">
                        <% categories.forEach(cat => { %>
                            <option value="<%= cat.value %>" <%= currentCategory === cat.value ? 'selected' : '' %>>
                                <%= cat.name %>
                            </option>
                        <% }); %>
                    </select>
                </div>
                
                <div class="sort-control">
                    <label for="sort">Sort by:</label>
                    <select id="sort" onchange="filterProducts()">
                        <% sortOptions.forEach(option => { %>
                            <option value="<%= option.value %>" <%= currentSort === option.value ? 'selected' : '' %>>
                                <%= option.name %>
                            </option>
                        <% }); %>
                    </select>
                </div>
            </div>
        </div>
    </section>

    <section class="shop-products">
        <div class="container">
            <% if (searchQuery) { %>
                <div class="search-results-message">
                    Showing results for <strong>"<%= searchQuery %>"</strong>
                    <% if (currentCategory !== 'all') { %>
                        in <strong><%= currentCategory %></strong>
                    <% } %>
                </div>
            <% } %>
            
            <% if (products.length > 0) { %>
                <div class="product-grid">
                    <% products.forEach(product => { %>
                        <div class="product-card">
                            <div class="product-image" style="background-image: url('/images/<%= product.image %>')"></div>
                            <div class="product-info">
                                <h3><%= product.name %></h3>
                                <div class="product-meta">
                                    <span class="price">$<%= product.price.toFixed(2) %></span>
                                    <span class="rating">‚≠ê <%= product.rating %></span>
                                    <% if (product.stock < 5) { %>
                                        <span class="stock-warning">Only <%= product.stock %> left!</span>
                                    <% } %>
                                </div>
                                <form class="add-to-cart-form" data-product-id="<%= product._id %>">
                                    <input type="hidden" name="productId" value="<%= product._id %>">
                                    <div class="quantity-control">
                                        <button type="button" class="quantity-btn minus">-</button>
                                        <input type="number" name="quantity" value="1" min="1" max="<%= product.stock %>" class="quantity-input">
                                        <button type="button" class="quantity-btn plus">+</button>
                                    </div>
                                    <button type="submit" class="add-to-cart-btn">Add to Cart</button>
                                </form>
                            </div>
                        </div>
                    <% }); %>
                </div>
            <% } else { %>
                <div class="no-products">
                    <p>No products found in this category. Please try another filter.</p>
                </div>
            <% } %>
        </div>
    </section>

    <% if (totalPages > 1) { %>
        <section class="pagination">
            <div class="container">
                <div class="pagination-controls">
                    <% if (hasPreviousPage) { %>
                        <a href="/shop?category=<%= currentCategory %>&sort=<%= currentSort %>&page=<%= currentPage-1 %>" class="page-link">‚Üê Previous</a>
                    <% } %>
                    
                    <% for (let i = 1; i <= totalPages; i++) { %>
                        <a href="/shop?category=<%= currentCategory %>&sort=<%= currentSort %>&page=<%= i %>" 
                           class="page-link <%= currentPage === i ? 'active' : '' %>">
                            <%= i %>
                        </a>
                    <% } %>
                    
                    <% if (hasNextPage) { %>
                        <a href="/shop?category=<%= currentCategory %>&sort=<%= currentSort %>&page=<%= currentPage+1 %>" class="page-link">Next ‚Üí</a>
                    <% } %>
                </div>
            </div>
        </section>
    <% } %>
</main>

<%- include('partials/footer') %>

<script>
    function filterProducts() {
        const category = document.getElementById('category').value;
        const sort = document.getElementById('sort').value;
        window.location.href = `/shop?category=${category}&sort=${sort}`;
    }

    // Quantity controls
    document.querySelectorAll('.quantity-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            const input = this.parentElement.querySelector('.quantity-input');
            let value = parseInt(input.value);
            
            if (this.classList.contains('plus')) {
                if (value < parseInt(input.max)) {
                    input.value = value + 1;
                }
            } else {
                if (value > parseInt(input.min)) {
                    input.value = value - 1;
                }
            }
        });
    });

    // Add to cart functionality
    // In your shop.ejs or wherever you have the add to cart form
document.querySelectorAll('.add-to-cart-form').forEach(form => {
  form.addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = {
      productId: this.querySelector('[name="productId"]').value,
      quantity: parseInt(this.querySelector('[name="quantity"]').value) || 1
    };

    fetch('/cart/add', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(formData)
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        // Update UI
        updateCartCount(data.cartItemCount);
      } else {
        alert('Error: ' + (data.message || 'Failed to add to cart'));
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Failed to add to cart');
    });
  });
});

function updateCartCount(count) {
  const cartCountElement = document.querySelector('.cart-count');
  if (cartCountElement) {
    cartCountElement.textContent = count;
  }
}
 // Quantity controls (for all pages)
    document.querySelectorAll('.quantity-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            const input = this.parentElement.querySelector('.quantity-input');
            let value = parseInt(input.value);
            
            if (this.classList.contains('plus')) {
                if (value < parseInt(input.max)) {
                    input.value = value + 1;
                }
            } else {
                if (value > parseInt(input.min)) {
                    input.value = value - 1;
                }
            }
        });
    });

    // Add to cart functionality (for all pages)
    document.querySelectorAll('.add-to-cart-form').forEach(form => {
        form.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = {
                productId: this.querySelector('[name="productId"]').value,
                quantity: parseInt(this.querySelector('[name="quantity"]').value) || 1
            };

            try {
                const response = await fetch('/cart/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData)
                });
                
                const data = await response.json();
                
                if (data.success) {
                    // Show success message
                    const successMsg = document.createElement('div');
                    successMsg.className = 'cart-success-message';
                    successMsg.textContent = '‚úì Added to cart!';
                    this.appendChild(successMsg);
                    
                    // Update cart count in header
                    if (data.cartItemCount) {
                        const cartCount = document.querySelector('.cart-count');
                        if (cartCount) cartCount.textContent = data.cartItemCount;
                    }
                    
                    // Remove message after 2 seconds
                    setTimeout(() => {
                        successMsg.remove();
                    }, 2000);
                } else {
                    alert('Error: ' + (data.message || 'Failed to add to cart'));
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to add to cart. Please try again.');
            }
        });
    });
</script>

<style>
    /* Add these styles to your existing CSS */
    .add-to-cart-form {
        margin-top: 15px;
    }
    
    .quantity-control {
        display: flex;
        margin-bottom: 10px;
    }
    
    .quantity-btn {
        width: 30px;
        height: 30px;
        background: #f0f0f0;
        border: 1px solid #ddd;
        cursor: pointer;
    }
    
    .quantity-input {
        width: 40px;
        text-align: center;
        margin: 0 5px;
    }
    
    .add-to-cart-btn {
        width: 100%;
        padding: 8px;
        background: #ff6b6b;
        color: white;
        border: none;
        cursor: pointer;
    }
    
    .cart-success-message {
        color: green;
        font-size: 0.9em;
        margin-top: 5px;
    }
</style>