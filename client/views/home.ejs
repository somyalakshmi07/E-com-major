<%- include('partials/header') %>

<main>
    <div class="container mt-4">
        <% if (typeof success_msg !== 'undefined' && success_msg.length > 0) { %>
            <div class="alert alert-success alert-dismissible fade show">
                <%= success_msg %>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        <% } %>
        
        <% if (typeof error_msg !== 'undefined' && error_msg.length > 0) { %>
            <div class="alert alert-danger alert-dismissible fade show">
                <%= error_msg %>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        <% } %>

        <% if (currentUser) { %>
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1>Welcome, <%= currentUser.username %>!</h1>
                <a href="/auth/logout" class="btn btn-outline-danger">Logout</a>
            </div>
            
            <% if (currentUser.role === 'admin') { %>
                <div class="mb-4">
                    <a href="/admin" class="btn btn-primary">Admin Panel</a>
                </div>
            <% } %>
        <% } %>
    </div>

    <section class="hero">
        <div class="hero-content">
            <h2>Welcome to Little Treasures!</h2>
            <p>Discover the perfect items for your child's happiness and growth.</p>
            <a href="/shop" class="btn">Shop Now</a>
        </div>
    </section>

    <section class="categories">
        <h2>Browse Categories</h2>
        <div class="category-grid">
            <% categories.forEach(category => { %>
                <div class="category-card" data-category="<%= category.name.toLowerCase().replace(/ /g, '-') %>">
                    <div class="category-icon"><%= category.icon %></div>
                    <h3><%= category.name %></h3>
                </div>
            <% }); %>
            <div class="category-card" data-category="all">
                <div class="category-icon">ðŸ”„</div>
                <h3>All Products</h3>
            </div>
        </div>
    </section>

    <section class="products py-5">
        <div class="container">
            <h2 class="text-center mb-5" id="products-heading">Featured Products</h2>
            <div id="loading-spinner" class="text-center my-5" style="display: none;">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p>Loading products...</p>
            </div>
            <div id="products-error" class="alert alert-danger text-center" style="display: none;"></div>
            <div class="horizontal-scroll-container">
                <div class="row flex-nowrap overflow-auto pb-4" id="products-container">
                    <% if (products && products.length) { %>
                        <% products.forEach(product => { %>
                            <div class="col-md-3 mb-4 product-item" data-category="<%= product.category.toLowerCase().replace(/ /g, '-') %>" style="min-width: 250px;">
                                <div class="card h-100">
                                    <img src="<%= product.image %>" class="card-img-top product-image" alt="<%= product.name %>">
                                    <div class="card-body">
                                        <h5 class="card-title"><%= product.name %></h5>
                                        <p class="card-text">Category: <%= product.category %></p>
                                        <p class="card-text">Price: $<%= product.price.toFixed(2) %></p>
                                        <% if (currentUser) { %>
                                            <form class="add-to-cart-form" data-product-id="<%= product.id %>">
                                                <input type="hidden" name="productId" value="<%= product.id %>">
                                                <input type="number" name="quantity" value="1" min="1" class="quantity-input">
                                                <button type="submit" class="add-to-cart-btn">Add to Cart</button>
                                            </form>
                                        <% } else { %>
                                            <a href="/auth/login" class="btn btn-primary">Login to Purchase</a>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="col-12">
                            <p class="text-center">No products available at the moment.</p>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    </section>

    <section class="testimonials">
        <h2>What Parents Say</h2>
        <div class="testimonial-slider">
            <div class="testimonial">
                <p>"The quality of products is amazing! My daughter loves her new dress."</p>
                <p class="author">- Sarah M.</p>
            </div>
        </div>
    </section>
</main>

<style>
    /* Horizontal scrolling styles */
    .horizontal-scroll-container {
        width: 100%;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
    }
    
    .flex-nowrap {
        flex-wrap: nowrap !important;
    }
    
    .overflow-auto {
        overflow: auto !important;
    }
    
    .product-image {
        height: 180px;
        object-fit: contain;
    }
    
    /* Scrollbar styling */
    .horizontal-scroll-container::-webkit-scrollbar {
        height: 8px;
    }
    
    .horizontal-scroll-container::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 10px;
    }
    
    .horizontal-scroll-container::-webkit-scrollbar-thumb {
        background: #888;
        border-radius: 10px;
    }
    
    .horizontal-scroll-container::-webkit-scrollbar-thumb:hover {
        background: #555;
    }
    
    /* Alert animations */
    .alert-dismissible {
        transition: all 0.3s ease;
    }
    
    /* Category grid */
    .category-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
        gap: 1rem;
        padding: 1rem;
    }
    
    .category-card {
        cursor: pointer;
        transition: transform 0.2s;
    }
    
    .category-card:hover {
        transform: translateY(-5px);
    }
</style>

<script>
    // Category filtering with API calls
    document.querySelectorAll('.category-card').forEach(card => {
        card.addEventListener('click', async function() {
            const category = this.getAttribute('data-category');
            const heading = document.getElementById('products-heading');
            const container = document.getElementById('products-container');
            const spinner = document.getElementById('loading-spinner');
            const errorDisplay = document.getElementById('products-error');
            
            // Reset UI
            errorDisplay.style.display = 'none';
            spinner.style.display = 'block';
            container.innerHTML = '';
            
            try {
                // Update heading
                if (category === 'all') {
                    heading.textContent = 'All Products';
                    const response = await fetch('/api/products');
                    const data = await response.json();
                    
                    if (!response.ok) throw new Error(data.message || 'Failed to load products');
                    if (!data.success) throw new Error(data.message || 'No products available');
                    
                    renderProducts(data.products);
                } else {
                    const categoryName = this.querySelector('h3').textContent;
                    heading.textContent = categoryName;
                    
                    const response = await fetch(`/api/products/category/${category}`);
                    const data = await response.json();
                    
                    if (!response.ok) throw new Error(data.message || 'Failed to load category products');
                    if (!data.success) throw new Error(data.message || 'No products in this category');
                    
                    renderProducts(data.products);
                }
            } catch (error) {
                console.error('Error loading products:', error);
                errorDisplay.textContent = `Error: ${error.message}`;
                errorDisplay.style.display = 'block';
            } finally {
                spinner.style.display = 'none';
            }
            
            // Scroll to products section
            document.querySelector('.products').scrollIntoView({
                behavior: 'smooth'
            });
        });
    });

    function renderProducts(products) {
        const container = document.getElementById('products-container');
        const isLoggedIn = <%= typeof currentUser !== 'undefined' %>;
        
        if (!products || products.length === 0) {
            container.innerHTML = `
                <div class="col-12">
                    <p class="text-center">No products available in this category.</p>
                </div>
            `;
            return;
        }
        
        container.innerHTML = products.map(product => `
            <div class="col-md-3 mb-4 product-item" 
                 data-category="${product.category.toLowerCase().replace(/ /g, '-')}" 
                 style="min-width: 250px;">
                <div class="card h-100">
                    <img src="${product.image}" class="card-img-top product-image" alt="${product.name}">
                    <div class="card-body">
                        <h5 class="card-title">${product.name}</h5>
                        <p class="card-text">Category: ${product.category}</p>
                        <p class="card-text">Price: $${product.price.toFixed(2)}</p>
                        ${isLoggedIn ? `
                        <form class="add-to-cart-form" data-product-id="${product._id}">
                            <input type="hidden" name="productId" value="${product._id}">
                            <input type="number" name="quantity" value="1" min="1" 
                                   max="${product.stock || 100}" class="quantity-input">
                            <button type="submit" class="add-to-cart-btn">Add to Cart</button>
                        </form>
                        ` : `
                        <a href="/auth/login" class="btn btn-primary">Login to Purchase</a>
                        `}
                    </div>
                </div>
            </div>
        `).join('');
        
        // Reattach event listeners to new products
        attachCartEventListeners();
    }

    // Cart functionality with improved error handling
    function attachCartEventListeners() {
        document.querySelectorAll('.add-to-cart-form').forEach(form => {
            form.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const productId = this.querySelector('[name="productId"]').value;
                const quantity = parseInt(this.querySelector('[name="quantity"]').value) || 1;
                const maxQuantity = parseInt(this.querySelector('[name="quantity"]').max) || 100;
                
                if (quantity > maxQuantity) {
                    alert(`Only ${maxQuantity} items available in stock`);
                    return;
                }
                
                try {
                    const response = await fetch('/cart/add', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${localStorage.getItem('token') || ''}`
                        },
                        body: JSON.stringify({ productId, quantity })
                    });
                    
                    const data = await response.json();
                    
                    if (!response.ok) throw new Error(data.message || 'Failed to add to cart');
                    if (!data.success) throw new Error(data.message || 'Failed to add to cart');
                    
                    // Show success message
                    const successMsg = document.createElement('div');
                    successMsg.className = 'cart-success-message';
                    successMsg.textContent = 'âœ“ Added to cart!';
                    this.appendChild(successMsg);
                    
                    // Update cart count in header
                    if (data.cartItemCount) {
                        const cartCount = document.querySelector('.cart-count');
                        if (cartCount) cartCount.textContent = data.cartItemCount;
                    }
                    
                    // Remove message after 2 seconds
                    setTimeout(() => {
                        successMsg.remove();
                    }, 2000);
                } catch (error) {
                    console.error('Error adding to cart:', error);
                    alert(`Error: ${error.message}`);
                }
            });
        });
    }

    // Initial attachment of event listeners
    attachCartEventListeners();
</script>

<%- include('partials/footer') %>